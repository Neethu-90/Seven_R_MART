<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="16" passed="14" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-01T12:53:57 IST" name="Suite" finished-at="2025-08-01T12:55:41 IST" duration-ms="104335">
    <groups>
      <group name="Regression">
        <method signature="ManageCategoryTest.verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.ManageCategoryTest@7d3e8655]" name="verifyUserIsAbleToLoginWithValidCredentials" class="testscript1.ManageCategoryTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2025-08-01T12:53:57 IST" name="Test" finished-at="2025-08-01T12:55:41 IST" duration-ms="104335">
      <class name="testscript1.ManageFooterTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:16 IST" name="browserInitialization" finished-at="2025-08-01T12:55:20 IST" duration-ms="4319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="validateUpdateButtonIsDisplayed()[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:20 IST" name="validateUpdateButtonIsDisplayed" description="Verify that the Update button is displayed when editing footer details." finished-at="2025-08-01T12:55:22 IST" duration-ms="1459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateButtonIsDisplayed -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:22 IST" name="browserQuit" finished-at="2025-08-01T12:55:22 IST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdateButtonIsDisplayed status=SUCCESS method=ManageFooterTest.validateUpdateButtonIsDisplayed()[pri:0, instance:testscript1.ManageFooterTest@626abbd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:22 IST" name="browserInitialization" finished-at="2025-08-01T12:55:26 IST" duration-ms="4007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="validateUserCanUpdateFooterInfo()[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:26 IST" name="validateUserCanUpdateFooterInfo" description="Verify that the user can update footer information including address and email successfully." finished-at="2025-08-01T12:55:28 IST" duration-ms="1855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserCanUpdateFooterInfo -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.ManageFooterTest@626abbd0]" started-at="2025-08-01T12:55:28 IST" name="browserQuit" finished-at="2025-08-01T12:55:29 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUserCanUpdateFooterInfo status=SUCCESS method=ManageFooterTest.validateUserCanUpdateFooterInfo()[pri:0, instance:testscript1.ManageFooterTest@626abbd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.ManageFooterTest -->
      <class name="testscript1.LoginTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:42 IST" name="browserInitialization" finished-at="2025-08-01T12:54:46 IST" duration-ms="4030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:46 IST" name="verifyUserIsAbleToLoginWithValidCredentials" description="Verify that the user is able to log in with valid credentials from the Excel sheet and navigate to the dashboard successfully." finished-at="2025-08-01T12:54:46 IST" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:46 IST" name="browserQuit" finished-at="2025-08-01T12:54:47 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginWithValidCredentials status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.LoginTest@6933b6c6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:47 IST" name="browserInitialization" finished-at="2025-08-01T12:54:51 IST" duration-ms="4007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginwithInvalidPassword()[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:51 IST" name="verifyUserIsAbleToLoginwithInvalidPassword" description="Verify that an alert is displayed when the user attempts to login with a valid username and an invalid password." finished-at="2025-08-01T12:54:51 IST" duration-ms="441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginwithInvalidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:51 IST" name="browserQuit" finished-at="2025-08-01T12:54:52 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginwithInvalidPassword status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginwithInvalidPassword()[pri:0, instance:testscript1.LoginTest@6933b6c6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:52 IST" name="browserInitialization" finished-at="2025-08-01T12:54:56 IST" duration-ms="4430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginwithInvalidUsername()[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:56 IST" name="verifyUserIsAbleToLoginwithInvalidUsername" description="Verify that an alert is displayed when the user attempts to login with an invalid username and a valid password." finished-at="2025-08-01T12:54:57 IST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginwithInvalidUsername -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:57 IST" name="browserQuit" finished-at="2025-08-01T12:54:57 IST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginwithInvalidUsername status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginwithInvalidUsername()[pri:0, instance:testscript1.LoginTest@6933b6c6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:54:57 IST" name="browserInitialization" finished-at="2025-08-01T12:55:02 IST" duration-ms="4849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginwithInvalidUsernameAndPassword()[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:55:02 IST" name="verifyUserIsAbleToLoginwithInvalidUsernameAndPassword" description="Verify that an alert is displayed when the user attempts to login with both invalid username and invalid password." finished-at="2025-08-01T12:55:02 IST" duration-ms="490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginwithInvalidUsernameAndPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.LoginTest@6933b6c6]" started-at="2025-08-01T12:55:02 IST" name="browserQuit" finished-at="2025-08-01T12:55:03 IST" duration-ms="584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginwithInvalidUsernameAndPassword status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginwithInvalidUsernameAndPassword()[pri:0, instance:testscript1.LoginTest@6933b6c6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.LoginTest -->
      <class name="testscript1.ManageContactTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.ManageContactTest@169bb4dd]" started-at="2025-08-01T12:55:29 IST" name="browserInitialization" finished-at="2025-08-01T12:55:33 IST" duration-ms="4136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="validateAdminIsAbleToUpdateManageContact()[pri:0, instance:testscript1.ManageContactTest@169bb4dd]" started-at="2025-08-01T12:55:33 IST" name="validateAdminIsAbleToUpdateManageContact" description="Verify that the admin is able to update contact details in the Manage Contact section successfully." finished-at="2025-08-01T12:55:34 IST" duration-ms="1732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAdminIsAbleToUpdateManageContact -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.ManageContactTest@169bb4dd]" started-at="2025-08-01T12:55:34 IST" name="browserQuit" finished-at="2025-08-01T12:55:35 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAdminIsAbleToUpdateManageContact status=SUCCESS method=ManageContactTest.validateAdminIsAbleToUpdateManageContact()[pri:0, instance:testscript1.ManageContactTest@169bb4dd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.ManageContactTest -->
      <class name="testscript1.LogoutTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.LogoutTest@7dfb0c0f]" started-at="2025-08-01T12:55:10 IST" name="browserInitialization" finished-at="2025-08-01T12:55:14 IST" duration-ms="4469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLogoutWithSuccessfully()[pri:0, instance:testscript1.LogoutTest@7dfb0c0f]" started-at="2025-08-01T12:55:14 IST" name="verifyUserIsAbleToLogoutWithSuccessfully" description="Verify that the user is redirected to the sign-in page after logging out successfully." finished-at="2025-08-01T12:55:15 IST" duration-ms="1357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLogoutWithSuccessfully -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.LogoutTest@7dfb0c0f]" started-at="2025-08-01T12:55:15 IST" name="browserQuit" finished-at="2025-08-01T12:55:16 IST" duration-ms="594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLogoutWithSuccessfully status=SUCCESS method=LogoutTest.verifyUserIsAbleToLogoutWithSuccessfully()[pri:0, instance:testscript1.LogoutTest@7dfb0c0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.LogoutTest -->
      <class name="testscript1.ManageCategoryTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.ManageCategoryTest@7d3e8655]" started-at="2025-08-01T12:55:03 IST" name="browserInitialization" finished-at="2025-08-01T12:55:07 IST" duration-ms="4263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.ManageCategoryTest@7d3e8655]" started-at="2025-08-01T12:55:07 IST" name="verifyUserIsAbleToLoginWithValidCredentials" description="Verify that a user can successfully log in and create a new category with an image upload." finished-at="2025-08-01T12:55:09 IST" duration-ms="1802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.ManageCategoryTest@7d3e8655]" started-at="2025-08-01T12:55:09 IST" name="browserQuit" finished-at="2025-08-01T12:55:10 IST" duration-ms="512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginWithValidCredentials status=SUCCESS method=ManageCategoryTest.verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.ManageCategoryTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.ManageCategoryTest -->
      <class name="testscript1.MnageNewsTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.MnageNewsTest@1f9e9475]" started-at="2025-08-01T12:55:35 IST" name="browserInitialization" finished-at="2025-08-01T12:55:39 IST" duration-ms="4017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsabletoAddNews()[pri:0, instance:testscript1.MnageNewsTest@1f9e9475]" started-at="2025-08-01T12:55:39 IST" name="verifyUserIsabletoAddNews" description="Verify that the user is able to add a news item and a success alert is displayed." finished-at="2025-08-01T12:55:41 IST" duration-ms="1769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsabletoAddNews -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.MnageNewsTest@1f9e9475]" started-at="2025-08-01T12:55:41 IST" name="browserQuit" finished-at="2025-08-01T12:55:41 IST" duration-ms="453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsabletoAddNews status=SUCCESS method=MnageNewsTest.verifyUserIsabletoAddNews()[pri:0, instance:testscript1.MnageNewsTest@1f9e9475] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.MnageNewsTest -->
      <class name="testscript1.AdminTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:53:57 IST" name="browserInitialization" finished-at="2025-08-01T12:54:02 IST" duration-ms="4788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="validateUpdateButtonIsEnabled()[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:02 IST" name="validateUpdateButtonIsEnabled" description="Verify that the Update button is enabled when editing admin user details." finished-at="2025-08-01T12:54:05 IST" duration-ms="2980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateButtonIsEnabled -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:05 IST" name="browserQuit" finished-at="2025-08-01T12:54:05 IST" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdateButtonIsEnabled status=SUCCESS method=AdminTest.validateUpdateButtonIsEnabled()[pri:0, instance:testscript1.AdminTest@4b520ea8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:05 IST" name="browserInitialization" finished-at="2025-08-01T12:54:09 IST" duration-ms="4001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyAdminCanUpdateField()[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:09 IST" name="verifyAdminCanUpdateField" description="Verify that the admin can update an existing user&#039;s details successfully." finished-at="2025-08-01T12:54:12 IST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanUpdateField -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:12 IST" name="browserQuit" finished-at="2025-08-01T12:54:12 IST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanUpdateField status=SUCCESS method=AdminTest.verifyAdminCanUpdateField()[pri:0, instance:testscript1.AdminTest@4b520ea8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:12 IST" name="browserInitialization" finished-at="2025-08-01T12:54:16 IST" duration-ms="4297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyAlertIsDisplayedAfterUpdate()[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:16 IST" name="verifyAlertIsDisplayedAfterUpdate" description="Verify that an alert is displayed after successfully updating admin user details." finished-at="2025-08-01T12:54:19 IST" duration-ms="2450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlertIsDisplayedAfterUpdate -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:19 IST" name="browserQuit" finished-at="2025-08-01T12:54:19 IST" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlertIsDisplayedAfterUpdate status=SUCCESS method=AdminTest.verifyAlertIsDisplayedAfterUpdate()[pri:0, instance:testscript1.AdminTest@4b520ea8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:19 IST" name="browserInitialization" finished-at="2025-08-01T12:54:23 IST" duration-ms="4109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method retried="true" signature="verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:23 IST" name="verifyUserIsAbleToLoginWithValidCredentials" description="Verify that a new admin user can be created successfully after valid login." finished-at="2025-08-01T12:54:35 IST" duration-ms="11608" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: chrome=138.0.7204.169)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [95f47fd7f3acd254e1d6ba48bc27f036, findElement {value=//div[@class='alert alert-success alert-dismissible'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.169, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58520}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58520/devtoo..., se:cdpVersion: 138.0.7204.169, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 95f47fd7f3acd254e1d6ba48bc27f036]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: chrome=138.0.7204.169)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [95f47fd7f3acd254e1d6ba48bc27f036, findElement {value=//div[@class='alert alert-success alert-dismissible'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.169, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58520}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58520/devtoo..., se:cdpVersion: 138.0.7204.169, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 95f47fd7f3acd254e1d6ba48bc27f036
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at pages.AdminPage.alertIsDisplayed(AdminPage.java:86)
at testscript1.AdminTest.verifyUserIsAbleToLoginWithValidCredentials(AdminTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:35 IST" name="browserQuit" finished-at="2025-08-01T12:54:35 IST" duration-ms="574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginWithValidCredentials status=SKIP method=AdminTest.verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.AdminTest@4b520ea8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:35 IST" name="browserInitialization" finished-at="2025-08-01T12:54:39 IST" duration-ms="4146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:39 IST" name="verifyUserIsAbleToLoginWithValidCredentials" description="Verify that a new admin user can be created successfully after valid login." finished-at="2025-08-01T12:54:41 IST" duration-ms="1801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript1.AdminTest@4b520ea8]" started-at="2025-08-01T12:54:41 IST" name="browserQuit" finished-at="2025-08-01T12:54:42 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginWithValidCredentials status=SUCCESS method=AdminTest.verifyUserIsAbleToLoginWithValidCredentials()[pri:0, instance:testscript1.AdminTest@4b520ea8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript1.AdminTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
